/*
    动态规划:
    其实如果一共比如有四个节点,1,2,3,4
    把1当做根节点的时候,它左侧的节点数是0,右侧的节点数是3,且一定是比根节点大的,那么其实也就是有相当于三个大小不同的节点组成的二叉树的个数m[3]
    把2当做根节点的时候,它左侧的节点数是1,右侧的节点数是2,那么结果相当于左侧的可能性乘上右侧的可能性,这里就是1*2
    把3当做根节点也是同理
    把4也是同理
    关键在于判断当以j作为根节点的时,判断其左侧的节点数,以及右侧的节点数,他们组成的可能性相乘就是该情况的结果
    然后以j+1作为根节点时,同理判断

    那么节点数有4是这样算
    5也是可以这样算,因为5可以拿4的情况当条件

*/
class Solution
{
public:
    int numTrees(int n)
    {
        int res = 0;
        map<int, int> m;
        m[0] = 1;
        m[1] = 1;
        m[2] = 2;
        m[3] = 5;
        for (int i = 4; i <= n; i++)
        {
            int temp = 0;
            for (int j = 1; j <= i; j++)
            {
                temp += m[j - 1] * m[i - j];
            }
            m[i] = temp;
        }
        return m[n];
    }
};